data = readmatrix('tiempo señal 1.csv');
t = data(3:end, 4); 
x = data(3:end, 5);  
% 2. Parámetros clave
Fs = 1 / (4e-7);    
N = length(x);      
X = fft(x);
X_mag = abs(X / N);
f = Fs * (0:(N/2)) / N;  
P1 = X_mag(1:N/2+1);
P1(2:end-1) = 2 * P1(2:end-1);
P1_dB = 20*log10(max(P1, 1e-12));
figure;
plot(f, P1_dB, 'LineWidth', 1.5);
grid on;
title('Espectro de Frecuencia (FFT)');
xlabel('Frecuencia (Hz)');
ylabel('Amplitud (dB)');
set(gca, 'FontSize', 12); 
xlim([100 9000]);  
ylim([-30 1]);

 Thoony
import numpy as np
import matplotlib.pyplot as plt

# Ruta del archivo
ruta = r'D:\Universidad\Semestre 6\Comunicaciones digitales\Informe 2\Señal senoidal\tiempo señal 1.csv'

# Leer solo las columnas necesarias (tiempo y voltaje)
t, x = np.loadtxt(ruta, delimiter=',', skiprows=2, usecols=(3,4), unpack=True)

# Calcular FFT
Fs = 1/5e-7  # Frecuencia de muestreo (2 MHz)
N = len(x)
X = np.fft.fft(x)
freq = np.fft.fftfreq(N, 1/Fs)[:N//2]  # Frecuencias positivas
mag = np.abs(X[:N//2]) * 2 / N  # Magnitud normalizada (espectro unilateral)
dB = 20*np.log10(np.maximum(mag, 1e-12))  # Conversión a dB

# Configurar y mostrar gráfico
plt.figure(figsize=(10, 6))
plt.plot(freq, dB, linewidth=1.5)
plt.grid(True)
plt.title('Espectro de Frecuencia (FFT)')
plt.xlabel('Frecuencia (Hz)')
plt.ylabel('Amplitud (dB)')
plt.xlim(100, 9000)
plt.ylim(-30, 1)
plt.show()